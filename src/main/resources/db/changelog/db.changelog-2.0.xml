<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

	<property name="releasesAndTransfersFile" value="/db/data/ReleasesAndTransfers.csv"/>
	<property name="dependenciesFile" value="/db/data/Dependencies.csv"/>
	<property name="pasRegisLicHoldStageFile" value="/db/data/stage_data_initialization/lichold.csv"/>
	<property name="pasRegisLicStatsStageFile" value="/db/data/stage_data_initialization/licstats.csv"/>
	<property name="emmaStageFile" value="/db/data/stage_data_initialization/emma.csv"/>

	<preConditions>
		<dbms type="${db.type}"/>
		<runningAs username="${db.username}"/>
	</preConditions>

	<!--
  ****************************************************************
  Dependencies
  ****************************************************************
  -->
	<changeSet id="create-table: dependencies" author="Environment Agency">
		<createTable tableName="dependencies">
			<column name="return_type" type="varchar(80)">
				<constraints nullable="false" unique="false"/>
			</column>
			<column name="parameter" type="varchar(150)">
				<constraints nullable="false" unique="false"/>
			</column>
			<column name="releases_and_transfers" type="varchar(50)">
				<constraints nullable="false" unique="false"/>
			</column>
			<column name="units" type="varchar(10)">
				<constraints nullable="false" unique="false"/>
			</column>
		</createTable>
		<rollback>
			<dropTable tableName="dependencies"/>
		</rollback>
	</changeSet>

	<changeSet id="load-data: dependencies" author="Environment Agency">
		<preConditions onFail="HALT">
			<tableExists tableName="dependencies"/>
			<sqlCheck expectedResult="0">select count(*) from dependencies</sqlCheck>
		</preConditions>
		<loadData file="${dependenciesFile}" tableName="dependencies"/>
		<rollback>
			<delete tableName="dependencies"></delete>
		</rollback>
	</changeSet>

	<changeSet id="create-index: dependencies" author="Environment Agency">
		<createIndex indexName="idx_dependencies" tableName="dependencies" unique="true">
			<column name="return_type"/>
			<column name="parameter"/>
			<column name="releases_and_transfers"/>
			<column name="units"/>
		</createIndex>
		<rollback>
			<dropIndex tableName="dependencies" indexName="idx_dependencies"/>
		</rollback>
	</changeSet>

	<!-- 
	****************************************************************
	Releases and Transfers
	****************************************************************
	-->
	<changeSet id="create-table: releases_and_transfers" author="Environment Agency">
		<createTable tableName="releases_and_transfers">
			<!-- Currently unique identifiers are generally 6 characters long but this could change! -->
			<column name="id" type="bigserial">
				<constraints primaryKey="true" nullable="false"/>
			</column>
			<column name="name" type="varchar(50)">
				<constraints nullable="false" unique="true"/>
			</column>
		</createTable>
		<rollback>
			<dropTable tableName="releases_and_transfers"/>
		</rollback>
	</changeSet>

	<changeSet id="load-data: releases_and_transfers" author="Environment Agency">
		<preConditions onFail="HALT">
			<tableExists tableName="releases_and_transfers"/>
			<columnExists tableName="releases_and_transfers" columnName="name"/>
			<sqlCheck expectedResult="0">select count(id) from releases_and_transfers</sqlCheck>
		</preConditions>
		<loadData file="${releasesAndTransfersFile}" tableName="releases_and_transfers"/>
		<rollback>
			<delete tableName="releases_and_transfers"></delete>
		</rollback>
	</changeSet>

	<changeSet id="create-index: releases_and_transfers" author="Environment Agency">
		<createIndex indexName="idx_releases_and_transfers_name" tableName="releases_and_transfers" unique="true">
			<column name="name"/>
		</createIndex>
		<rollback>
			<dropIndex tableName="releases_and_transfers" indexName="idx_releases_and_transfers_name"/>
		</rollback>
	</changeSet>

	<!--
	****************************************************************
	Regis/PAS LICSTATS table holds status information
	****************************************************************
	-->
	<changeSet id="create-table: stage_licstats" author="Environment Agency">
		<createTable tableName="stage_licstats">
			<column name="stat_num" type="smallint"/>
			<column name="stat_sub" type="smallint"/>
			<column name="stat_sdesc" type="varchar(30)"/>
			<column name="stat_ldesc" type="varchar(50)"/>
		</createTable>
		<rollback>
			<dropTable tableName="stage_licstats"/>
		</rollback>
	</changeSet>

	<changeSet id="load-data: stage_licstats" author="Environment Agency">
		<preConditions onFail="HALT">
			<tableExists tableName="stage_licstats"/>
			<sqlCheck expectedResult="0">select count(*) from stage_licstats</sqlCheck>
		</preConditions>
		<loadData file="${pasRegisLicStatsStageFile}" tableName="stage_licstats">
		</loadData>
		<rollback>
			<delete tableName="stage_licstats"></delete>
		</rollback>
	</changeSet>

	<!--
	****************************************************************
	Regis/PAS LICHOLD table holds status information
	****************************************************************
	-->
	<changeSet id="create-table: stage_lichold" author="Environment Agency">
		<createTable tableName="stage_lichold">
			<column name="lic_aref" type="bigserial">
				<constraints primaryKey="true" nullable="false"/>
			</column>
			<column name="lic_stat" type="smallint"/>
			<column name="lic_subs" type="smallint"/>
			<column name="lic_name" type="varchar(80)"/>
			<column name="lic_site" type="varchar(80)"/>
			<column name="lic_epr" type="varchar(18)"/>
			<column name="lic_wml" type="varchar(18)"/>
			<column name="lic_othid" type="varchar(18)"/>
			<column name="date_created" type="timestamp"/>
			<column name="date_modified" type="timestamp" valueDate="CURRENT_TIMESTAMP"/>
		</createTable>
		<rollback>
			<dropTable tableName="stage_lichold"/>
		</rollback>
	</changeSet>

	<changeSet id="load-data: stage_lichold" author="Environment Agency">
		<preConditions onFail="HALT">
			<tableExists tableName="stage_lichold"/>
			<sqlCheck expectedResult="0">select count(*) from stage_lichold</sqlCheck>
		</preConditions>
		<loadData file="${pasRegisLicHoldStageFile}" tableName="stage_lichold">
		</loadData>
		<rollback>
			<delete tableName="stage_lichold"></delete>
		</rollback>
	</changeSet>

	<!--
	****************************************************************
	EMMA extract table holds emma staging data
	****************************************************************
	-->
	<changeSet id="create-table: stage_emma" author="Environment Agency">
		<createTable tableName="stage_emma">
			<column name="permit" type="varchar(18)"/>
			<column name="long_name" type="varchar(100)"/>
			<column name="date_created" type="timestamp"/>
			<column name="date_modified" type="timestamp"/>
		</createTable>
		<rollback>
			<dropTable tableName="stage_emma"/>
		</rollback>
	</changeSet>

	<changeSet id="load-data: stage_emma" author="Environment Agency">
		<preConditions onFail="HALT">
			<tableExists tableName="stage_emma"/>
			<sqlCheck expectedResult="0">select count(*) from stage_emma</sqlCheck>
		</preConditions>
		<loadData file="${emmaStageFile}" tableName="stage_emma">
		</loadData>
		<rollback>
			<delete tableName="stage_emma"></delete>
		</rollback>
	</changeSet>

	<!--
	****************************************************************
	Read the permit/site data from the stage tables and merge into
	the main tables
	****************************************************************
	-->
	<changeSet id="prepare: site-permit" author="Environment Agency">
		<sqlFile path="../sql/prepare-permit-data.sql"
						 relativeToChangelogFile="true"
						 splitStatements="true"
						 stripComments="true"/>
	</changeSet>


</databaseChangeLog>