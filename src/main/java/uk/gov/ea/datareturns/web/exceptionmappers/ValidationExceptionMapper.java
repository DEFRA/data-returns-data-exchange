package uk.gov.ea.datareturns.web.exceptionmappers;

import uk.gov.ea.datareturns.domain.exceptions.AbstractValidationException;
import uk.gov.ea.datareturns.domain.result.ExceptionMessageContainer;

import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.Response.Status;
import javax.ws.rs.ext.ExceptionMapper;
import javax.ws.rs.ext.Provider;

/**
 * Validation exception mapper
 *
 * @author Sam Gardner-Dell
 */
@Provider
public class ValidationExceptionMapper implements ExceptionMapper<AbstractValidationException> {
    /**
     * Handles all types of validation exception generated by the {@link uk.gov.ea.datareturns.domain.processors.FileUploadProcessor}
     *
     * All validation errors are handled by returning HTTP 400 Bad Request.
     *
     * @param exception the exception to handle
     * @return a {@link Response} to return to the client for the exception that was thrown
     */
    @Override
    public Response toResponse(final AbstractValidationException exception) {
        final Status status = Status.BAD_REQUEST;
        final ExceptionMessageContainer entity = new ExceptionMessageContainer(exception.getType(), exception.getMessage());
        return Response.status(status).entity(entity).type(MediaType.APPLICATION_JSON_TYPE).build();
    }
}