<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- Inherit defaults from Spring Boot -->
	<!--<parent>-->
		<!--<groupId>org.springframework.boot</groupId>-->
		<!--<artifactId>spring-boot-starter-parent</artifactId>-->
		<!--<version>1.5.8.RELEASE</version>-->
	<!--</parent>-->

	<groupId>uk.gov.defra</groupId>
	<artifactId>data-returns-platform</artifactId>
	<version>1.0.0</version>
	<packaging>pom</packaging>

	<name>Defra Data-Returns Platform</name>
	<url>http://maven.apache.org</url>

	<modules>
		<module>legacy_api</module>
	</modules>


	<organization>
		<name>Environment Agency</name>
		<url>http://www.environment-agency.gov.uk</url>
	</organization>

	<developers>
		<developer>
			<id>sam</id>
			<name>Sam Gardner-Dell</name>
			<email>sam.gardner-dell at environment-agency.gov.uk</email>
		</developer>
		<developer>
			<id>Graham</id>
			<name>Graham Willis</name>
			<email>graham.willis@druidwood.co.uk</email>
		</developer>
	</developers>

	<scm>
		<url>https://github.com/DEFRA/data-returns-data-exchange</url>
	</scm>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>

		<docker.image.prefix>defra</docker.image.prefix>

		<!-- Library versions -->
		<spring-boot.version>1.5.8.RELEASE</spring-boot.version>


		<!-- Postgres version -->
		<postgresql.version>42.1.1</postgresql.version>

		<!-- Hibernate validation -->
		<hibernate.version>5.2.11.Final</hibernate.version>
		<hazelcast.version>3.8.3</hazelcast.version>

		<!-- Apache commons libraries -->
		<commons-lang3.version>3.6</commons-lang3.version>
		<commons-collections4.version>4.1</commons-collections4.version>
		<commons-io.version>2.5</commons-io.version>
		<commons-text.version>1.1</commons-text.version>

		<!-- Univocity CSV parser -->
		<univocity.parsers.version>2.2.2</univocity.parsers.version>

		<!-- InfluxDB -->
		<influxdb-java.version>2.6</influxdb-java.version>

		<metrics-spring.version>3.1.3</metrics-spring.version>

		<liquibase-slf4j.version>2.0.0</liquibase-slf4j.version>

		<airbrake-logback.version>1.0.3</airbrake-logback.version>

		<!-- spring cloud/aws -->
		<aws.java.sdk.version>1.11.179</aws.java.sdk.version>

		<!-- Test -->
		<run.test.suite>**/AllTests.class</run.test.suite>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<!-- Import dependency management from Spring Boot -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- Server management interface port -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>${spring-boot.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-starter-tomcat</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.glassfish.jersey.media</groupId>
						<artifactId>jersey-media-jaxb</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- Expose dropwizard metrics via management port -->
			<dependency>
				<groupId>com.ryantenney.metrics</groupId>
				<artifactId>metrics-spring</artifactId>
				<version>${metrics-spring.version}</version>
			</dependency>

			<!-- Jersey JAX-RS -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-jersey</artifactId>
				<version>${spring-boot.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-starter-tomcat</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.glassfish.jersey.media</groupId>
						<artifactId>jersey-media-jaxb</artifactId>
					</exclusion>
				</exclusions>
			</dependency>


			<!-- Swagger -->
			<dependency>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-jersey2-jaxrs</artifactId>
				<scope>compile</scope>
				<version>1.5.16</version>
			</dependency>

			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>${postgresql.version}</version>
			</dependency>

			<!-- Hazelcast 2nd level cache -->
			<!--
			<dependency>
				<groupId>com.hazelcast</groupId>
				<artifactId>hazelcast-hibernate52</artifactId>
				<version>1.2.2</version>
			</dependency>
			-->

			<!-- special dependency to fix liquibase's logging fetish -->
			<dependency>
				<groupId>com.mattbertolini</groupId>
				<artifactId>liquibase-slf4j</artifactId>
				<version>${liquibase-slf4j.version}</version>
			</dependency>

			<!-- Errbit error reporting -->
			<dependency>
				<groupId>net.anthavio</groupId>
				<artifactId>airbrake-logback</artifactId>
				<version>${airbrake-logback.version}</version>
			</dependency>

			<!-- CSV Parsing -->
			<dependency>
				<groupId>com.univocity</groupId>
				<artifactId>univocity-parsers</artifactId>
				<version>${univocity.parsers.version}</version>
			</dependency>

			<!-- Charset autodetection library -->
			<!--
			<dependency>
				<groupId>com.github.albfernandez</groupId>
				<artifactId>juniversalchardet</artifactId>
				<version>2.0.0</version>
			</dependency>
			-->

			<!-- Mustache support -->
			<!--
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-mustache</artifactId>
			</dependency>
			-->

			<!-- Lucene -->
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-core</artifactId>
				<version>6.2.1</version>
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-queries</artifactId>
				<version>6.2.1</version>
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-queryparser</artifactId>
				<version>6.2.1</version>
			</dependency>

			<!-- Apache commons -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-collections4</artifactId>
				<version>${commons-collections4.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-text</artifactId>
				<version>${commons-text.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>1.10</version>
			</dependency>

			<!-- Test -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${spring-boot.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>


	<!-- Common submodule dependencies -->
	<dependencies>
		<!-- Apache commons -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-text</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>
	</dependencies>


	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.bsc.maven</groupId>
					<artifactId>maven-processor-plugin</artifactId>
					<version>3.3.2</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.7.0</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.20.1</version>
				</plugin>

				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<!-- Run required annotation processors -->
			<plugin>
				<groupId>org.bsc.maven</groupId>
				<artifactId>maven-processor-plugin</artifactId>
				<configuration>
					<processors>
						<!-- Hibernate metamodel processor -->
						<processor>org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor</processor>
						<!-- QueryDSL processor -->
						<processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
					</processors>
					<addOutputDirectoryToCompilationSources>true</addOutputDirectoryToCompilationSources>
				</configuration>
				<executions>
					<execution>
						<id>process</id>
						<goals>
							<goal>process</goal>
						</goals>
						<phase>generate-sources</phase>
					</execution>
					<execution>
						<id>process-test</id>
						<goals>
							<goal>process-test</goal>
						</goals>
						<phase>generate-test-sources</phase>
					</execution>
				</executions>
			</plugin>

			<!-- Disable annotation processors during normal compilation -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<compilerArgument>-proc:none</compilerArgument>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<delimiters>
						<delimiter>${*}</delimiter>
						<delimiter>@</delimiter>
					</delimiters>
					<useDefaultDelimiters>false</useDefaultDelimiters>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<includes>
						<include>${run.test.suite}</include>
					</includes>
					<!-- Set the working directory to the target folder so that unit test log/work folders are created there -->
					<workingDirectory>${project.build.directory}</workingDirectory>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
