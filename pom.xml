<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>data-returns-data-exchange</groupId>
	<artifactId>data-returns-data-exchange</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>data-returns-data-exchange</name>
	<url>http://maven.apache.org</url>

	<!-- Inherit defaults from Spring Boot -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.1.RELEASE</version>
	</parent>


	<organization>
		<name>Environment Agency</name>
		<url>http://www.environment-agency.gov.uk</url>
	</organization>

	<developers>
		<developer>
			<id>sam</id>
			<name>Sam Gardner-Dell</name>
			<email>sam.gardner-dell at environment-agency.gov.uk</email>
			<organization>Environment Agency</organization>
			<organizationUrl>http://www.environment-agency.gov.uk</organizationUrl>
			<roles>
				<role>Project lead</role>
			</roles>
		</developer>
	</developers>

	<scm>
		<url>https://github.com/EnvironmentAgency/data-returns-data-exchange</url>
	</scm>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<!-- Library versions -->

		<!-- Postgres version -->
		<postgresql.version>9.4.1208</postgresql.version>

		<!-- Hibernate validation -->
		<hibernate.version>5.1.0.Final</hibernate.version>

		<!-- Apache commons libraries -->
		<commons-lang3.version>3.4</commons-lang3.version>
		<commons-collections4.version>4.1</commons-collections4.version>
		<commons-email.version>1.4</commons-email.version>
		<commons-io.version>2.5</commons-io.version>

		<!-- Univocity CSV parser -->
		<univocity.parsers.version>2.2.2</univocity.parsers.version>

		<metrics-spring.version>3.1.3</metrics-spring.version>

		<liquibase-slf4j.version>2.0.0</liquibase-slf4j.version>

		<airbrake-logback.version>1.0.1</airbrake-logback.version>

		<aws.java.sdk.version>1.11.4</aws.java.sdk.version>

		<spring-boot.version>1.4.1.RELEASE</spring-boot.version>

		<!-- Test -->
		<assertj.version>3.5.2</assertj.version>
		<run.test.suite>**/AllTests.class</run.test.suite>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- Exclude tomcat from the spring boot starter web dependency - undertow/jetty give better performance -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>${spring-boot.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-starter-tomcat</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jetty</artifactId>
		</dependency>

		<!-- Server management interface port -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- Spring boot annotation processor -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- Expose dropwizard metrics via management port -->
		<dependency>
			<groupId>com.ryantenney.metrics</groupId>
			<artifactId>metrics-spring</artifactId>
			<version>${metrics-spring.version}</version>
		</dependency>
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-core</artifactId>
		</dependency>
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-jersey2</artifactId>
			<version>${dropwizard-metrics.version}</version>
		</dependency>
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-jvm</artifactId>
			<version>${dropwizard-metrics.version}</version>
		</dependency>
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-jetty9</artifactId>
			<version>${dropwizard-metrics.version}</version>
		</dependency>

		<!-- Jersey JAX-RS -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jersey</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-multipart</artifactId>
			<version>${jersey.version}</version>
		</dependency>

		<!--  JPA via Hibernate ORM -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
		</dependency>
		<!-- Second level cache - disabled at this point as we use an in application cache - see also persistence.xml-->
		<!-- 		<dependency> -->
		<!-- 			<groupId>org.hibernate</groupId> -->
		<!-- 			<artifactId>hibernate-ehcache</artifactId> -->
		<!-- 		</dependency> -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-java8</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-c3p0</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<!--Hibernate validator -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>
		<!-- special dependency to fix liquibase's logging fetish -->
		<dependency>
			<groupId>com.mattbertolini</groupId>
			<artifactId>liquibase-slf4j</artifactId>
			<version>${liquibase-slf4j.version}</version>
		</dependency>

		<!-- Errbit error reporting -->
		<dependency>
			<groupId>net.anthavio</groupId>
			<artifactId>airbrake-logback</artifactId>
			<version>${airbrake-logback.version}</version>
		</dependency>

		<!-- CSV Parsing -->
		<dependency>
			<groupId>com.univocity</groupId>
			<artifactId>univocity-parsers</artifactId>
			<version>${univocity.parsers.version}</version>
		</dependency>

		<!-- Mustache support -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mustache</artifactId>
		</dependency>

		<!-- AWS S3 Integration -->
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-s3</artifactId>
			<version>${aws.java.sdk.version}</version>
		</dependency>

		<!-- Lucene -->
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-core</artifactId>
			<version>6.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-queries</artifactId>
			<version>6.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-queryparser</artifactId>
			<version>6.2.1</version>
		</dependency>

		<!-- Apache commons -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>${commons-collections4.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-email</artifactId>
			<version>${commons-email.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<!-- 		<filters> -->
		<!-- 			<filter>src/main/resources/db/changelog/liquibase.properties</filter> -->
		<!-- 		</filters> -->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.yml</include>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*</include>
				</includes>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<delimiters>
						<delimiter>${*}</delimiter>
						<delimiter>@</delimiter>
					</delimiters>
					<useDefaultDelimiters>false</useDefaultDelimiters>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<includes>
						<include>${run.test.suite}</include>
					</includes>
					<!-- Set the working directory to the target folder so that unit test log/work folders are created there -->
					<workingDirectory>${project.build.directory}</workingDirectory>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<executable>true</executable>
					<mainClass>uk.gov.ea.datareturns.App</mainClass>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.5</version>

				<dependencies>
					<dependency>
						<groupId>org.postgresql</groupId>
						<artifactId>postgresql</artifactId>
						<version>${postgresql.version}</version>
					</dependency>
				</dependencies>

				<!-- common configuration shared by all executions -->
				<configuration>
					<driver>${db.driver}</driver>
					<url>${db.url}</url>
					<username>${db.username}</username>
					<password>${db.password}</password>
					<autocommit>true</autocommit>
					<enableFiltering>true</enableFiltering>
				</configuration>

				<executions>
					<!-- This command can be executed using mvn sql:execute@drop-connections -->
					<execution>
						<id>drop-connections</id>
						<configuration>
							<url>${db.mgt.url}</url>
							<srcFiles>
								<srcFile>${project.build.outputDirectory}/db/sql/1-drop-connections.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
					<!-- This command can be executed using mvn sql:execute@drop-database -->
					<execution>
						<id>drop-database</id>
						<configuration>
							<url>${db.mgt.url}</url>
							<srcFiles>
								<srcFile>${project.build.outputDirectory}/db/sql/2-drop-database.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
					<!-- This command can be executed using mvn sql:execute@create-database -->
					<execution>
						<id>create-database</id>
						<configuration>
							<url>${db.mgt.url}</url>
							<srcFiles>
								<srcFile>${project.build.outputDirectory}/db/sql/3-create-database.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
					<!-- This command can be executed using mvn sql:execute@create-schema -->
					<execution>
						<id>create-schema</id>
						<configuration>
							<srcFiles>
								<srcFile>${project.build.outputDirectory}/db/sql/4-create-schema.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-maven-plugin</artifactId>
				<version>${liquibase.version}</version>
				<configuration>
					<promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
					<defaultSchemaName>${db.schema}</defaultSchemaName>
					<changelogSchemaName>${db.schema}</changelogSchemaName>
					<driver>${db.driver}</driver>
					<url>${db.url}</url>
					<username>${db.username}</username>
					<password>${db.password}</password>
					<propertyFile>${project.build.outputDirectory}/db/changelog/liquibase.properties</propertyFile>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>update</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>