<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>data-returns-data-exchange</groupId>
	<artifactId>data-returns-data-exchange</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>data-returns-data-exchange</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
				
		<!-- Library versions -->
		<dropwizard.version>0.9.2</dropwizard.version>
		<dropwizard.metrics.version>3.1.2</dropwizard.metrics.version>
		<junit.version>4.12</junit.version>
		<maven.compiler.version>3.2</maven.compiler.version>
		<maven.surefire.plugin.version>2.18.1</maven.surefire.plugin.version>
		<maven.jar.plugin.version>2.6</maven.jar.plugin.version>
		<onejar.version>1.4.4</onejar.version>
		<csv.validator.version>1.0</csv.validator.version>
		<liquibase.version>3.4.2</liquibase.version>
		<liquibase.maven.plugin.version>3.2.0</liquibase.maven.plugin.version>
		<postgresql.version>9.4-1205-jdbc42</postgresql.version>
		
		<!-- Hibernate validation -->
		<hibernate.orm.version>5.1.0.Final</hibernate.orm.version>
		<hibernate.validator.version>5.2.4.Final</hibernate.validator.version>

		<!-- Logging framework -->
		<jcl-over-slf4j.version>1.7.18</jcl-over-slf4j.version>

		<!-- Apache commons libraries -->
		<commons.email.version>1.4</commons.email.version>
		<commons.io.version>2.4</commons.io.version>
		<commons.csv.version>1.2</commons.csv.version>

		<jackson-dataformat-xml.version>2.6.3</jackson-dataformat-xml.version>
		<codehaus.woodstox.version>4.4.1</codehaus.woodstox.version>
		<redis.client.version>2.8.0</redis.client.version>
		<aws.java.sdk.version>1.10.62</aws.java.sdk.version>

		<!-- Test -->
		<mockito.version>1.10.19</mockito.version>
		<powermock-api.version>1.6.4</powermock-api.version>
		<assertj.version>3.2.0</assertj.version>
		<run.test.suite>**/AllTests.class</run.test.suite>
	</properties>

	<dependencies>
		<dependency>
			<groupId>io.dropwizard</groupId>
			<artifactId>dropwizard-core</artifactId>
			<version>${dropwizard.version}</version>
		</dependency>
		<dependency>
			<groupId>io.dropwizard</groupId>
			<artifactId>dropwizard-client</artifactId>
			<version>${dropwizard.version}</version>
		</dependency>
		<dependency>
			<groupId>io.dropwizard</groupId>
			<artifactId>dropwizard-views-mustache</artifactId>
			<version>${dropwizard.version}</version>
		</dependency>
		<dependency>
			<groupId>io.dropwizard</groupId>
			<artifactId>dropwizard-assets</artifactId>
			<version>${dropwizard.version}</version>
		</dependency>
		<dependency>
			<groupId>io.dropwizard</groupId>
			<artifactId>dropwizard-forms</artifactId>
			<version>${dropwizard.version}</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-core</artifactId>
			<version>${dropwizard.metrics.version}</version>
		</dependency>
		
		<!--  Hibernate ORM -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.orm.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.orm.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-java8</artifactId>
			<version>${hibernate.orm.version}</version>
		</dependency>		
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-c3p0</artifactId>
			<version>${hibernate.orm.version}</version>
		</dependency>
<!-- 		TODO: Configure second level cache -->
<!-- 		<dependency> -->
<!-- 			<groupId>org.hibernate</groupId> -->
<!-- 			<artifactId>hibernate-ehcache</artifactId> -->
<!-- 			<version>${hibernate.orm.version}</version> -->
<!-- 		</dependency>		 -->
		
		<!--  Hibernate validator -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate.validator.version}</version>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${jcl-over-slf4j.version}</version>
		</dependency>

		<!-- Apache commons -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-csv</artifactId>
			<version>${commons.csv.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-email</artifactId>
			<version>${commons.email.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons.io.version}</version>
		</dependency>

		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
			<version>${liquibase.version}</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
			<version>${jackson-dataformat-xml.version}</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.woodstox</groupId>
			<artifactId>woodstox-core-asl</artifactId>
			<version>${codehaus.woodstox.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>stax-api</artifactId>
					<groupId>javax.xml.stream</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-s3</artifactId>
			<version>${aws.java.sdk.version}</version>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>${powermock-api.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>${powermock-api.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.dropwizard</groupId>
			<artifactId>dropwizard-testing</artifactId>
			<version>${dropwizard.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.test-framework.providers</groupId>
			<artifactId>jersey-test-framework-provider-grizzly2</artifactId>
			<version>2.22.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
	
        <filters>
            <filter>src/main/resources/db/changelog/liquibase.properties</filter>
        </filters>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>

			<resource>
				<filtering>true</filtering>
				<directory>${basedir}/config-templates</directory>
				<targetPath>${project.build.directory}/external_resources/config</targetPath>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
				<configuration>
					<includes>
						<include>${run.test.suite}</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven.jar.plugin.version}</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>uk.gov.ea.datareturns.App</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.dstovall</groupId>
				<artifactId>onejar-maven-plugin</artifactId>
				<version>${onejar.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>one-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.5</version>

				<dependencies>
					<dependency>
						<groupId>org.postgresql</groupId>
						<artifactId>postgresql</artifactId>
						<version>${postgresql.version}</version>
					</dependency>
				</dependencies>

				<!-- common configuration shared by all executions -->
				<configuration>
					<driver>${db.driver}</driver>
					<url>${db.url}</url>
					<username>${db.username}</username>
					<password>${db.password}</password>
					<autocommit>true</autocommit>
					<enableFiltering>true</enableFiltering>
				</configuration>

				<executions>
					<!-- This command can be executed using mvn sql:execute@create-user -->
					<!-- TODO: This cannot be done at this point as by default postgres 
						does not have a superuser account available to use over JDBC. It does however 
						work if you are able to pass it an existing superuser and password to use
					<execution>
						<id>create-user</id>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<username>**** an existing superuser</username>
							<password>**** password of an existing superuser</password>
							<autocommit>true</autocommit>
							<srcFiles>
								<srcFile>${basedir}/src/main/resources/db/sql/1-create-user.sql</srcFile>
							</srcFiles>
							<onError>continue</onError>
						</configuration>
					</execution>
					-->
					<!-- This command can be executed using mvn sql:execute@drop-database -->
					
					<execution>
						<id>drop-database</id>
						<configuration>
							<url>${db.mgt.url}</url>
							<srcFiles>
								<srcFile>${basedir}/src/main/resources/db/sql/2-drop-database.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
					<!-- This command can be executed using mvn sql:execute@create-database -->
					<execution>
						<id>create-database</id>
						<configuration>
							<url>${db.mgt.url}</url>
							<srcFiles>
								<srcFile>${basedir}/src/main/resources/db/sql/3-create-database.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
					<!-- This command can be executed using mvn sql:execute@create-schema -->
					<execution>
						<id>create-schema</id>
						<configuration>
							<srcFiles>
								<srcFile>${basedir}/src/main/resources/db/sql/4-create-schema.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-maven-plugin</artifactId>
				<version>${liquibase.maven.plugin.version}</version>
				<configuration>
					<promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
					<defaultSchemaName>${db.schema}</defaultSchemaName>
					<changelogSchemaName>${db.schema}</changelogSchemaName>
					<driver>${db.driver}</driver>
					<url>${db.url}</url>
					<username>${db.username}</username>
					<password>${db.password}</password>
					<propertyFile>${project.build.outputDirectory}/db/changelog/liquibase.properties</propertyFile>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>update</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<pluginRepositories>
		<pluginRepository>
			<id>onejar-maven-plugin.googlecode.com</id>
			<url>http://onejar-maven-plugin.googlecode.com/svn/mavenrepo</url>
		</pluginRepository>
	</pluginRepositories>
</project>
