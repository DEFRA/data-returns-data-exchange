logging:
  level: ERROR
  loggers:
    uk.gov.ea.datareturns: DEBUG
    io.dropwizard: INFO
    org.glassfish: ERROR
    org.eclipse: ERROR
    # Useful to log REST requests and responses 
    org.glassfish.jersey.filter: DEBUG
  appenders:
  - type: console
  - type: file
    currentLogFilename: log/datareturns.log
    archivedLogFilenamePattern: log/datareturns-%d.log
    threshold: ALL
    archive: true
    archivedFileCount: 5
    timeZone: UTC
server:
  applicationConnectors:
  - type: http
    port: 9020
  adminConnectors:
  - type: http
    port: 9021
misc:
  uploadedLocation: ./target/external_resources/uploaded
  outputLocation: ./target/external_resources/output
  csvSeparator: ","
  debugMode: true
test:
  testFilesLocation: /testfiles
  testTimeout: 1000000
  cleanupAfterTestRun: true
# Database Configuration
database:
  url: ${db.url}
  user: ${db.username}
  password: ${db.password}
  driverClass: ${db.driver}
  dialect: ${db.dialect}
# Monitor Pro Email Configuration
monitorProEmail:
  host: ${monpro.email.host}
  port: ${monpro.email.port}
  from: ${monpro.email.from}
  to: ${monpro.email.to}
# LIVE SETTINGS FOR THE EMMA DATABASE - DO NOT USE FOR TEST PURPOSES!
#  subjectLowerNumericUniqueId: EA_LP_10000_TO_69000_LIST
#  subjectUpperNumericUniqueId: EA_LP_70000_ABOVE_LIST
#  subjectLowerAlphaNumericUniqueId: EA_LP_AA_TO_GZ_LIST
#  subjectUpperAlphaNumericUniqueId: EA_LP_HA_TO_ZZ_LIST  
  subjectLowerNumericUniqueId: EA_TEST_ENVIRONMENT
  subjectUpperNumericUniqueId: EA_TEST_ENVIRONMENT
  subjectLowerAlphaNumericUniqueId: EA_TEST_ENVIRONMENT
  subjectUpperAlphaNumericUniqueId: EA_TEST_ENVIRONMENT
  body: ${monpro.email.body}
  useTLS: ${monpro.email.tls}
# Storage Provider Configuration  
storage:
  local:
    temporaryFolder: ./target/external_resources/storage/temp
    persistentFolder: ./target/external_resources/storage/persisted
    cleanOnStartup: true
# Amazon S3 persistence settings
#  s3:
#    awsAccessKey: ${s3.aws.accessKey}
#    awsSecretKey: ${s3.aws.secretKey}
#    temporaryBucket: ${s3.temporaryBucket}
#    persistentBucket: ${s3.persistentBucket}
#    endpoint: ${s3.endpoint}
#    protocol: ${s3.protocol}
#    proxyHost: ${s3.proxyHost}
#    proxyPort: ${s3.proxyPort}
#    pathStyleAccess: ${s3.pathStyleAccess}